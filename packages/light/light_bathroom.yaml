# Кастомизация
homeassistant:
  customize:
    # Освещение
    light.bathroom:
      friendly_name: Ванная Плафон


# Таймер
timer:
  light_bathroom_auto:
    duration: '00:00:03'
  light_bathroom_manual:
    duration: '01:30:00'


input_boolean:
  # Вкл / выкл автоматизации освещения
  light_bathroom_automation:
    name: Ванная
    initial: on
    icon: mdi:home-automation


# Автоматизации
automation:
  # Датчик движения
  - alias: light_bathroom_motion
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_sensor_bathroom
        to: 'on'
      - platform: state
        entity_id: binary_sensor.motion_sensor_bathroom
        to: 'off'
        for: '00:01:00'
      - platform: state
        entity_id: binary_sensor.motion_sensor_bathroom
        to: 'off'
        for: '00:10:00'
    condition:
      - "{{ is_state('timer.light_bathroom_manual', 'idle') }}"
    action:
      - choose:
          # Включение при обнаружении движения
          - conditions:
              - "{{ trigger.to_state.state == 'on' }}"
              - "{{ is_state('light.bathroom', 'off') }}"
            sequence:
              - service: timer.start
                entity_id: timer.light_bathroom_auto
              - service: light.turn_on
                entity_id: light.bathroom
                data:
                  brightness_pct: >
                    {% if 0 <= now().hour < 5 %} 5
                    {% else %} 100
                    {% endif %}
          # Выключение без движения
          - conditions:
              - "{{ trigger.to_state.state == 'off' }}"
              - "{{ is_state('light.bathroom', 'on') }}"
              - condition: or
                conditions:
                  - "{{ (0 <= now().hour < 5) and
                        (now() - states.binary_sensor.motion_sensor_bathroom.last_updated).seconds | int >= 60 }}"
                  - "{{ (5 <= now().hour < 24) and
                        (now() - states.binary_sensor.motion_sensor_bathroom.last_updated).seconds | int >= 600 }}"
            sequence:
              - service: timer.start
                entity_id: timer.light_bathroom_auto
              - service: light.turn_off
                entity_id: light.bathroom


  # Кнопка
  - alias: light_bathroom_smart_switch
    initial_state: true
    trigger:
      - platform: event
        event_type: deconz_event
        event_data:
          id: smart_switch_bathroom
    condition:
      - "{{ trigger.event.data.event in [1002, 1004, 1001] }}"
    action:
      - choose:
          # Включение освещения при любом нажатии
          - conditions:
              - "{{ is_state('light.bathroom', 'off') }}"
            sequence:
              - service: light.turn_on
                entity_id: light.bathroom
                data: {brightness_pct: 100}
        # Выключение освещения при любом нажатии
        default:
          - service: light.turn_off
            entity_id: light.bathroom


  # Таймер
  - alias: light_timer_bathroom
    initial_state: true
    trigger:

      - platform: state
        entity_id: light.bathroom
    condition:
      - "{{ is_state('alarm_control_panel.ha_alarm', 'disarmed') }}"
      - "{{ trigger.from_state.state != 'unavailable' }}"
    action:
      - choose:
          # Сброс / запуск таймера при включении вручную
          - conditions:
              - "{{ trigger.to_state.state == 'on' }}"
              - "{{ is_state('timer.light_bathroom_auto', 'idle') }}"
            sequence:
              - service: timer.cancel
                entity_id: timer.light_bathroom_manual
              - service: timer.start
                entity_id: timer.light_bathroom_manual
          # Сброс таймера при выключении вручную
          - conditions:
              - "{{ trigger.to_state.state == 'off' }}"
              - "{{ is_state('timer.light_bathroom_auto', 'idle') }}"
            sequence:
              - service: timer.cancel
                entity_id: timer.light_bathroom_manual


  # Время
  - alias: light_bathroom_time
    initial_state: true
    trigger:
      - platform: time
        at: '05:00:05'
    condition:
      - "{{ is_state('light.bathroom', 'on') }}"
    action:
      # Увеличение яркости в заданное время
      - service: timer.start
        entity_id: timer.light_bathroom_auto
      - service: light.turn_on
        entity_id: light.bathroom
        data: {brightness_pct: 100}
